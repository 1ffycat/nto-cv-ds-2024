### YamlMime:ManagedReference
items:
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark
  commentId: T:uTraverse.Benchmarks.Data.DatabaseBenchmark
  id: DatabaseBenchmark
  parent: uTraverse.Benchmarks.Data
  children:
  - uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup
  - uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray
  - uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable
  - uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray
  - uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup
  - uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup
  - uTraverse.Benchmarks.Data.DatabaseBenchmark._getCount
  langs:
  - csharp
  - vb
  name: DatabaseBenchmark
  nameWithType: DatabaseBenchmark
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark
  type: Class
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: DatabaseBenchmark
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 16
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: public class DatabaseBenchmark
    content.vb: Public Class DatabaseBenchmark
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark._getCount
  commentId: F:uTraverse.Benchmarks.Data.DatabaseBenchmark._getCount
  id: _getCount
  parent: uTraverse.Benchmarks.Data.DatabaseBenchmark
  langs:
  - csharp
  - vb
  name: _getCount
  nameWithType: DatabaseBenchmark._getCount
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark._getCount
  type: Field
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: _getCount
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 26
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: >-
      [Params(new object?[] { 10, 100, 1000 })]

      public int _getCount
    return:
      type: System.Int32
    content.vb: >-
      <Params(New Object() { 10, 100, 1000 })>

      Public _getCount As Integer
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup
  commentId: M:uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup
  id: Setup
  parent: uTraverse.Benchmarks.Data.DatabaseBenchmark
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: DatabaseBenchmark.Setup()
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup()
  type: Method
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: Setup
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 28
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: >-
      [GlobalSetup]

      public void Setup()
    content.vb: >-
      <GlobalSetup>

      Public Sub Setup()
  overload: uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup*
  attributes:
  - type: BenchmarkDotNet.Attributes.GlobalSetupAttribute
    ctor: BenchmarkDotNet.Attributes.GlobalSetupAttribute.#ctor
    arguments: []
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup
  commentId: M:uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup
  id: Cleanup
  parent: uTraverse.Benchmarks.Data.DatabaseBenchmark
  langs:
  - csharp
  - vb
  name: Cleanup()
  nameWithType: DatabaseBenchmark.Cleanup()
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup()
  type: Method
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: Cleanup
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 64
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: >-
      [GlobalCleanup]

      public void Cleanup()
    content.vb: >-
      <GlobalCleanup>

      Public Sub Cleanup()
  overload: uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup*
  attributes:
  - type: BenchmarkDotNet.Attributes.GlobalCleanupAttribute
    ctor: BenchmarkDotNet.Attributes.GlobalCleanupAttribute.#ctor
    arguments: []
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup
  commentId: M:uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup
  id: IterationSetup
  parent: uTraverse.Benchmarks.Data.DatabaseBenchmark
  langs:
  - csharp
  - vb
  name: IterationSetup()
  nameWithType: DatabaseBenchmark.IterationSetup()
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup()
  type: Method
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: IterationSetup
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 72
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: >-
      [IterationSetup]

      public void IterationSetup()
    content.vb: >-
      <IterationSetup>

      Public Sub IterationSetup()
  overload: uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup*
  attributes:
  - type: BenchmarkDotNet.Attributes.IterationSetupAttribute
    ctor: BenchmarkDotNet.Attributes.IterationSetupAttribute.#ctor
    arguments: []
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray
  commentId: M:uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray
  id: GetPlacesContainsArray
  parent: uTraverse.Benchmarks.Data.DatabaseBenchmark
  langs:
  - csharp
  - vb
  name: GetPlacesContainsArray()
  nameWithType: DatabaseBenchmark.GetPlacesContainsArray()
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray()
  type: Method
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: GetPlacesContainsArray
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 89
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: >-
      [Benchmark(90, "R:\\nto\\project\\uTraverse.Benchmarks\\Data\\DatabaseBenchmark.cs", Baseline = true)]

      public List<Place> GetPlacesContainsArray()
    return:
      type: System.Collections.Generic.List{uTraverse.PlacesAPI.Models.Place}
    content.vb: >-
      <Benchmark(90, "R:\nto\project\uTraverse.Benchmarks\Data\DatabaseBenchmark.cs", Baseline:=True)>

      Public Function GetPlacesContainsArray() As List(Of Place)
  overload: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray*
  attributes:
  - type: BenchmarkDotNet.Attributes.BenchmarkAttribute
    ctor: BenchmarkDotNet.Attributes.BenchmarkAttribute.#ctor(System.Int32,System.String)
    arguments:
    - type: System.Int32
      value: 90
    - type: System.String
      value: R:\nto\project\uTraverse.Benchmarks\Data\DatabaseBenchmark.cs
    namedArguments:
    - name: Baseline
      type: System.Boolean
      value: true
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable
  commentId: M:uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable
  id: GetPlacesContainsEnumerable
  parent: uTraverse.Benchmarks.Data.DatabaseBenchmark
  langs:
  - csharp
  - vb
  name: GetPlacesContainsEnumerable()
  nameWithType: DatabaseBenchmark.GetPlacesContainsEnumerable()
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable()
  type: Method
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: GetPlacesContainsEnumerable
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 95
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: >-
      [Benchmark(96, "R:\\nto\\project\\uTraverse.Benchmarks\\Data\\DatabaseBenchmark.cs")]

      public List<Place> GetPlacesContainsEnumerable()
    return:
      type: System.Collections.Generic.List{uTraverse.PlacesAPI.Models.Place}
    content.vb: >-
      <Benchmark(96, "R:\nto\project\uTraverse.Benchmarks\Data\DatabaseBenchmark.cs")>

      Public Function GetPlacesContainsEnumerable() As List(Of Place)
  overload: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable*
  attributes:
  - type: BenchmarkDotNet.Attributes.BenchmarkAttribute
    ctor: BenchmarkDotNet.Attributes.BenchmarkAttribute.#ctor(System.Int32,System.String)
    arguments:
    - type: System.Int32
      value: 96
    - type: System.String
      value: R:\nto\project\uTraverse.Benchmarks\Data\DatabaseBenchmark.cs
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray
  commentId: M:uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray
  id: GetPlacesJoinArray
  parent: uTraverse.Benchmarks.Data.DatabaseBenchmark
  langs:
  - csharp
  - vb
  name: GetPlacesJoinArray()
  nameWithType: DatabaseBenchmark.GetPlacesJoinArray()
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray()
  type: Method
  source:
    remote:
      path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
      branch: backend/city-selection
      repo: https://github.com/jezvgg/project.git
    id: GetPlacesJoinArray
    path: uTraverse.Benchmarks/Data/DatabaseBenchmark.cs
    startLine: 101
  assemblies:
  - uTraverse.Benchmarks
  namespace: uTraverse.Benchmarks.Data
  syntax:
    content: >-
      [Benchmark(102, "R:\\nto\\project\\uTraverse.Benchmarks\\Data\\DatabaseBenchmark.cs")]

      public List<Place> GetPlacesJoinArray()
    return:
      type: System.Collections.Generic.List{uTraverse.PlacesAPI.Models.Place}
    content.vb: >-
      <Benchmark(102, "R:\nto\project\uTraverse.Benchmarks\Data\DatabaseBenchmark.cs")>

      Public Function GetPlacesJoinArray() As List(Of Place)
  overload: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray*
  attributes:
  - type: BenchmarkDotNet.Attributes.BenchmarkAttribute
    ctor: BenchmarkDotNet.Attributes.BenchmarkAttribute.#ctor(System.Int32,System.String)
    arguments:
    - type: System.Int32
      value: 102
    - type: System.String
      value: R:\nto\project\uTraverse.Benchmarks\Data\DatabaseBenchmark.cs
references:
- uid: uTraverse.Benchmarks.Data
  commentId: N:uTraverse.Benchmarks.Data
  href: uTraverse.html
  name: uTraverse.Benchmarks.Data
  nameWithType: uTraverse.Benchmarks.Data
  fullName: uTraverse.Benchmarks.Data
  spec.csharp:
  - uid: uTraverse
    name: uTraverse
    href: uTraverse.html
  - name: .
  - uid: uTraverse.Benchmarks
    name: Benchmarks
    href: uTraverse.Benchmarks.html
  - name: .
  - uid: uTraverse.Benchmarks.Data
    name: Data
    href: uTraverse.Benchmarks.Data.html
  spec.vb:
  - uid: uTraverse
    name: uTraverse
    href: uTraverse.html
  - name: .
  - uid: uTraverse.Benchmarks
    name: Benchmarks
    href: uTraverse.Benchmarks.html
  - name: .
  - uid: uTraverse.Benchmarks.Data
    name: Data
    href: uTraverse.Benchmarks.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup*
  commentId: Overload:uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup
  href: uTraverse.Benchmarks.Data.DatabaseBenchmark.html#uTraverse_Benchmarks_Data_DatabaseBenchmark_Setup
  name: Setup
  nameWithType: DatabaseBenchmark.Setup
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.Setup
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup*
  commentId: Overload:uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup
  href: uTraverse.Benchmarks.Data.DatabaseBenchmark.html#uTraverse_Benchmarks_Data_DatabaseBenchmark_Cleanup
  name: Cleanup
  nameWithType: DatabaseBenchmark.Cleanup
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.Cleanup
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup*
  commentId: Overload:uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup
  href: uTraverse.Benchmarks.Data.DatabaseBenchmark.html#uTraverse_Benchmarks_Data_DatabaseBenchmark_IterationSetup
  name: IterationSetup
  nameWithType: DatabaseBenchmark.IterationSetup
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.IterationSetup
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray*
  commentId: Overload:uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray
  href: uTraverse.Benchmarks.Data.DatabaseBenchmark.html#uTraverse_Benchmarks_Data_DatabaseBenchmark_GetPlacesContainsArray
  name: GetPlacesContainsArray
  nameWithType: DatabaseBenchmark.GetPlacesContainsArray
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsArray
- uid: System.Collections.Generic.List{uTraverse.PlacesAPI.Models.Place}
  commentId: T:System.Collections.Generic.List{uTraverse.PlacesAPI.Models.Place}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Place>
  nameWithType: List<Place>
  fullName: System.Collections.Generic.List<uTraverse.PlacesAPI.Models.Place>
  nameWithType.vb: List(Of Place)
  fullName.vb: System.Collections.Generic.List(Of uTraverse.PlacesAPI.Models.Place)
  name.vb: List(Of Place)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: uTraverse.PlacesAPI.Models.Place
    name: Place
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: uTraverse.PlacesAPI.Models.Place
    name: Place
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable*
  commentId: Overload:uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable
  href: uTraverse.Benchmarks.Data.DatabaseBenchmark.html#uTraverse_Benchmarks_Data_DatabaseBenchmark_GetPlacesContainsEnumerable
  name: GetPlacesContainsEnumerable
  nameWithType: DatabaseBenchmark.GetPlacesContainsEnumerable
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesContainsEnumerable
- uid: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray*
  commentId: Overload:uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray
  href: uTraverse.Benchmarks.Data.DatabaseBenchmark.html#uTraverse_Benchmarks_Data_DatabaseBenchmark_GetPlacesJoinArray
  name: GetPlacesJoinArray
  nameWithType: DatabaseBenchmark.GetPlacesJoinArray
  fullName: uTraverse.Benchmarks.Data.DatabaseBenchmark.GetPlacesJoinArray
